(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{384:function(r,e,t){"use strict";t.r(e);var n=t(41),_=Object(n.a)({},(function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"完整功能图表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#完整功能图表"}},[r._v("#")]),r._v(" 完整功能图表")]),r._v(" "),t("h2",{attrs:{id:"_3-设计规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-设计规范"}},[r._v("#")]),r._v(" 3.设计规范")]),r._v(" "),t("h3",{attrs:{id:"_3-1-操作方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-操作方法"}},[r._v("#")]),r._v(" 3.1 操作方法")]),r._v(" "),t("table",[t("thead",[t("tr",[t("th",[r._v("方法及说明")]),r._v(" "),t("th",[r._v("URL")]),r._v(" "),t("th",[r._v("Request")]),r._v(" "),t("th",[r._v("Response")])])]),r._v(" "),t("tbody",[t("tr",[t("td",[r._v("GET: "),t("br"),r._v(" 普通获取数据，"),t("br"),r._v(" 可用浏览器调试")]),r._v(" "),t("td",[r._v("base_url/get/")]),r._v(" "),t("td",[r._v("{"),t("br"),r._v("    TableName:{"),t("br"),r._v("      … "),t("br"),r._v("    }"),t("br"),r._v("} "),t("br"),r._v(" {…}内为限制条件"),t("br"),t("br"),r._v(" 例如获取一个 id = 235 的 Moment："),t("br"),r._v(" "),t("a",{attrs:{href:"http://apijson.cn/api/?url=http%3A%2F%2Fapijson.cn%3A8080%2Fget&type=JSON&json=%7B%22Moment%22%3A%7B%22id%22%3A235%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v("{"),t("br"),r._v('    "Moment":{'),t("br"),r._v('      "id":235'),t("br"),r._v("    }"),t("br"),r._v("}"),t("OutboundLink")],1),r._v(" "),t("br"),r._v(" 后端校验通过后自动解析为 SQL 并执行："),t("br"),t("code",[r._v("SELECT * FROM Moment WHERE id=235 LIMIT 1")])]),r._v(" "),t("td",[r._v("{"),t("br"),r._v("    TableName:{"),t("br"),r._v("      ..."),t("br"),r._v("    },"),t("br"),r._v('    "code":200,'),t("br"),r._v('    "msg":"success"'),t("br"),r._v("}"),t("br"),r._v("例如"),t("br"),r._v("{"),t("br"),r._v('    "Moment":{'),t("br"),r._v('      "id":235,'),t("br"),r._v('      "userId":38710,'),t("br"),r._v('      "content":"APIJSON,let interfaces and documents go to hell !"'),t("br"),r._v("    },"),t("br"),r._v('    "code":200,'),t("br"),r._v('    "msg":"success"'),t("br"),r._v(" }")])]),r._v(" "),t("tr",[t("td",[r._v("HEAD: "),t("br"),r._v(" 普通获取数量，"),t("br"),r._v(" 可用浏览器调试")]),r._v(" "),t("td",[r._v("base_url/head/")]),r._v(" "),t("td",[r._v("{"),t("br"),r._v("    TableName:{"),t("br"),r._v("      …"),t("br"),r._v("    }"),t("br"),r._v(" } "),t("br"),r._v(" {…}内为限制条件 "),t("br"),t("br"),r._v(" 例如获取一个 id = 38710 的 User 所发布的 Moment 总数："),t("br"),r._v(" "),t("a",{attrs:{href:"http://apijson.cn/api/?url=http%3A%2F%2Fapijson.cn%3A8080%2Fhead&type=JSON&json=%7B%22Moment%22%3A%7B%22userId%22%3A38710%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v("{"),t("br"),r._v('    "Moment":{'),t("br"),r._v('      "userId":38710'),t("br"),r._v("    }"),t("br"),r._v("}"),t("OutboundLink")],1),r._v(" "),t("br"),r._v(" 后端校验通过后自动解析为 SQL 并执行："),t("br"),t("code",[r._v("SELECT count(*) FROM Moment WHERE userId=38710 LIMIT 1")])]),r._v(" "),t("td",[r._v("{"),t("br"),r._v("    TableName:{"),t("br"),r._v('      "code":200,'),t("br"),r._v('      "msg":"success",'),t("br"),r._v('      "count":10'),t("br"),r._v("    },"),t("br"),r._v('    "code":200,'),t("br"),r._v('    "msg":"success"'),t("br"),r._v("} "),t("br"),r._v(" 例如"),t("br"),r._v("{"),t("br"),r._v('    "Moment":{'),t("br"),r._v('      "code":200,'),t("br"),r._v('      "msg":"success",'),t("br"),r._v('      "count":10'),t("br"),r._v("    },"),t("br"),r._v('    "code":200,'),t("br"),r._v('     "msg":"success"'),t("br"),r._v("}")])]),r._v(" "),t("tr",[t("td",[r._v("GETS: "),t("br"),r._v(" 安全/私密获取数据，"),t("br"),r._v(" 用于获取钱包等"),t("br"),r._v("对安全性要求高的数据")]),r._v(" "),t("td",[r._v("base_url/gets/")]),r._v(" "),t("td",[r._v('最外层加一个 "tag":tag，例如 '),t("a",{attrs:{href:"http://apijson.cn/api/?url=http%3A%2F%2Fapijson.cn%3A8080%2Fgets&type=JSON&json=%7B%22tag%22%3A%22Privacy%22,%22Privacy%22%3A%7B%22id%22%3A82001%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"tag":"Privacy"'),t("OutboundLink")],1),r._v("，其它同GET")]),r._v(" "),t("td",[r._v("同GET")])]),r._v(" "),t("tr",[t("td",[r._v("HEADS: "),t("br"),r._v(" 安全/私密获取数量，"),t("br"),r._v(" 用于获取银行卡数量等"),t("br"),r._v("对安全性要求高的数据总数")]),r._v(" "),t("td",[r._v("base_url/heads/")]),r._v(" "),t("td",[r._v('最外层加一个 "tag":tag，例如 '),t("a",{attrs:{href:"http://apijson.cn/api/?url=http%3A%2F%2Fapijson.cn%3A8080%2Fheads&type=JSON&json=%7B%22tag%22%3A%22Verify%22,%22Verify%22%3A%7B%22phone%22%3A13000082001%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"tag":"Verify"'),t("OutboundLink")],1),r._v("，其它同HEAD")]),r._v(" "),t("td",[r._v("同HEAD")])]),r._v(" "),t("tr",[t("td",[r._v("POST: "),t("br"),r._v(" 新增数据")]),r._v(" "),t("td",[r._v("base_url/post/")]),r._v(" "),t("td",[r._v("单个： "),t("br"),r._v(" {"),t("br"),r._v("    TableName:{"),t("br"),r._v("      …"),t("br"),r._v("    },"),t("br"),r._v('    "tag":tag'),t("br"),r._v("} "),t("br"),r._v(" {…}中id由后端生成，不能传 "),t("br"),t("br"),r._v("例如当前登录用户 38710 发布一个新 Comment："),t("br"),t("a",{attrs:{href:"http://apijson.cn/api?url=http%3A%2F%2Fapijson.cn%3A8080%2Fpost&type=JSON&json=%7B%22Comment%22:%7B%22momentId%22:12,%22content%22:%22APIJSON,let%20interfaces%20and%20documents%20go%20to%20hell%20!%22%7D,%22tag%22:%22Comment%22%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v("{"),t("br"),r._v('    "Comment":{'),t("br"),r._v('      "momentId":12,'),t("br"),r._v('      "content":"APIJSON,let interfaces and documents go to hell !" '),t("br"),r._v("    },"),t("br"),r._v('    "tag":"Comment"'),t("br"),r._v("}"),t("OutboundLink")],1),r._v(" "),t("br"),r._v(" 后端校验通过后自动解析为 SQL 并执行："),t("br"),t("code",[r._v("INSERT INTO Comment(userId,momentId,content) VALUES(38710,12,'APIJSON,let interfaces and documents go to hell !')")]),r._v(" "),t("br"),r._v(" "),t("br"),r._v(" 批量： "),t("br"),r._v(" {"),t("br"),r._v("    TableName[]:[{"),t("br"),r._v("        …"),t("br"),r._v("      }, {"),t("br"),r._v("        …"),t("br"),r._v("      }"),t("br"),r._v("      …"),t("br"),r._v("    ],"),t("br"),r._v('    "tag":tag'),t("br"),r._v("} "),t("br"),r._v(" {…}中id由后端生成，不能传 "),t("br"),t("br"),r._v("例如当前登录用户 82001 发布 2 个 Comment："),t("br"),t("a",{attrs:{href:"http://apijson.cn/api?url=http%3A%2F%2Fapijson.cn%3A8080%2Fpost&type=JSON&json=%7B%22Comment%5B%5D%22:%5B%7B%22momentId%22:12,%22content%22:%22APIJSON,let%20interfaces%20and%20documents%20go%20to%20hell%20!%22%7D,%7B%22momentId%22:15,%22content%22:%22APIJSON%20is%20a%20JSON%20transmision%20protocol.%22%7D%5D,%22tag%22:%22Comment:%5B%5D%22%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v("{"),t("br"),r._v('    "Comment[]":[{'),t("br"),r._v('      "momentId":12,'),t("br"),r._v('      "content":"APIJSON,let interfaces and documents go to hell !"'),t("br"),r._v("      }, {"),t("br"),r._v('      "momentId":15,'),t("br"),r._v('      "content":"APIJSON is a JSON transmision protocol."'),t("br"),r._v("    }],"),t("br"),r._v('    "tag":"Comment:[]"'),t("br"),r._v("}"),t("OutboundLink")],1),t("br"),r._v("  后端校验通过后自动解析为 SQL 并执行："),t("br"),t("code",[r._v("INSERT INTO Comment(userId,momentId,content) VALUES(82001,12,'APIJSON,let interfaces and documents go to hell !');")]),t("br"),t("br"),t("code",[r._v("INSERT INTO Comment(userId,momentId,content) VALUES(82001,15,'APIJSON is a JSON transmision protocol.');")])]),r._v(" "),t("td",[r._v("单个： "),t("br"),r._v(" {"),t("br"),r._v("    TableName:{"),t("br"),r._v('      "code":200,'),t("br"),r._v('      "msg":"success",'),t("br"),r._v('      "id":38710'),t("br"),r._v("    },"),t("br"),r._v('    "code":200,'),t("br"),r._v('    "msg":"success"'),t("br"),r._v("}"),t("br"),r._v("例如"),t("br"),r._v("{"),t("br"),r._v('    "Comment":{'),t("br"),r._v('      "code":200,'),t("br"),r._v('      "msg":"success",'),t("br"),r._v('      "id":120'),t("br"),r._v("    },"),t("br"),r._v('    "code":200,'),t("br"),r._v('    "msg":"success"'),t("br"),r._v("} "),t("br"),r._v(" "),t("br"),r._v(" 批量： "),t("br"),r._v(" {"),t("br"),r._v("    TableName:{"),t("br"),r._v('      "code":200,'),t("br"),r._v('      "msg":"success",'),t("br"),r._v('      "count":5,'),t("br"),r._v('      "id[]":[1, 2, 3, 4, 5]'),t("br"),r._v("    },"),t("br"),r._v('    "code":200,'),t("br"),r._v('    "msg":"success"'),t("br"),r._v("}"),t("br"),r._v("例如"),t("br"),r._v("{"),t("br"),r._v('    "Comment":{'),t("br"),r._v('      "code":200,'),t("br"),r._v('      "msg":"success",'),t("br"),r._v('      "count":2,'),t("br"),r._v('      "id[]":[1, 2]'),t("br"),r._v("    },"),t("br"),r._v('    "code":200,'),t("br"),r._v('    "msg":"success"'),t("br"),r._v("}")])]),r._v(" "),t("tr",[t("td",[r._v("PUT: "),t("br"),r._v(" 修改数据，"),t("br"),r._v(" 只修改所传的字段")]),r._v(" "),t("td",[r._v("base_url/put/")]),r._v(" "),t("td",[r._v("{"),t("br"),r._v("    TableName:{"),t("br"),r._v('      "id":id,'),t("br"),r._v("      …"),t("br"),r._v("    },"),t("br"),r._v('    "tag":tag'),t("br"),r._v("} "),t("br"),r._v(" {…} 中 id 或 id{} 至少传一个 "),t("br"),t("br"),r._v("例如当前登录用户 82001 修改 id = 235 的 Moment 的 content："),t("br"),t("a",{attrs:{href:"http://apijson.cn/api?url=http%3A%2F%2Fapijson.cn%3A8080%2Fput&type=JSON&json=%7B%22Moment%22:%7B%22id%22:235,%22content%22:%22APIJSON,let%20interfaces%20and%20documents%20go%20to%20hell%20!%22%7D,%22tag%22:%22Moment%22%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v("{"),t("br"),r._v('    "Moment":{'),t("br"),r._v('      "id":235,'),t("br"),r._v('      "content":"APIJSON,let interfaces and documents go to hell !"'),t("br"),r._v("    },"),t("br"),r._v('    "tag":"Moment"'),t("br"),r._v("}"),t("OutboundLink")],1),r._v(" "),t("br"),r._v(" 后端校验通过后自动解析为 SQL 并执行："),t("br"),t("code",[r._v("UPDATE Moment SET content='APIJSON,let interfaces and documents go to hell !' WHERE id=235 AND userId=82001 LIMIT 1")]),r._v(" "),t("br"),t("br"),r._v(" 批量除了 id{}:[] 也可类似批量 POST，只是每个 {...} 里面都必须有 id。"),t("br"),r._v('"tag":"Comment[]" 对应对象 "Comment":{"id{}":[1,2,3]}，表示指定记录全部统一设置；'),t("br"),r._v('"tag":"Comment:[]" 多了冒号，对应数组 "Comment[]":[{"id":1},{"id":2},{"id":3}]，表示每项单独设置')]),r._v(" "),t("td",[r._v("同POST")])]),r._v(" "),t("tr",[t("td",[r._v("DELETE: "),t("br"),r._v(" 删除数据")]),r._v(" "),t("td",[r._v("base_url/delete/")]),r._v(" "),t("td",[r._v("{"),t("br"),r._v("    TableName:{"),t("br"),r._v('      "id":id'),t("br"),r._v("    },"),t("br"),r._v('    "tag":tag'),t("br"),r._v("} "),t("br"),r._v(" {…} 中 id 或 id{} 至少传一个，一般只传 id 或 id{} "),t("br"),t("br"),r._v("例如当前登录用户 82001 批量删除 id = 100,110,120 的 Comment："),t("br"),t("a",{attrs:{href:"http://apijson.cn/api?url=http%3A%2F%2Fapijson.cn%3A8080%2Fdelete&type=JSON&json=%7B%22Comment%22:%7B%22id%7B%7D%22:%5B100,110,120%5D%7D,%22tag%22:%22Comment%5B%5D%22%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v("{"),t("br"),r._v('    "Comment":{'),t("br"),r._v('      "id{}":[100,110,120]'),t("br"),r._v("    },"),t("br"),r._v('    "tag":"Comment[]"'),t("br"),r._v("}"),t("OutboundLink")],1),r._v(" "),t("br"),r._v(" 后端校验通过后自动解析为 SQL 并执行："),t("br"),t("code",[r._v("DELETE FROM Comment WHERE id IN(100,110,120) AND userId=82001 LIMIT 3")])]),r._v(" "),t("td",[r._v("{"),t("br"),r._v("    TableName:{"),t("br"),r._v('      "code":200,'),t("br"),r._v('      "msg":"success",'),t("br"),r._v('      "id[]":[100,110,120]'),t("br"),r._v('      "count":3'),t("br"),r._v("    },"),t("br"),r._v('    "code":200,'),t("br"),r._v('    "msg":"success"'),t("br"),r._v("}"),t("br"),r._v("例如"),t("br"),r._v("{"),t("br"),r._v('   "Comment":{'),t("br"),r._v('      "code":200,'),t("br"),r._v('      "msg":"success",'),t("br"),r._v('      "id[]":[100,110,120],'),t("br"),r._v('      "count":3'),t("br"),r._v("   },"),t("br"),r._v('   "code":200,'),t("br"),r._v('   "msg":"success"'),t("br"),r._v("}")])]),r._v(" "),t("tr",[t("td",[r._v("以上接口的简单形式: "),t("br"),r._v(" base_url/{method}/{tag}")]),r._v(" "),t("td",[r._v("GET: 普通获取数据 "),t("br"),r._v(" base_url/get/{tag} "),t("br"),t("br"),r._v(" HEAD: 普通获取数量 "),t("br"),r._v(" base_url/head/{tag} "),t("br"),t("br"),r._v(" GETS: 安全/私密获取数据 "),t("br"),r._v("  base_url/gets/{tag} "),t("br"),t("br"),r._v(" HEADS: 安全/私密获取数量 "),t("br"),r._v(" base_url/heads/{tag} "),t("br"),t("br"),r._v(" POST: 新增数据 "),t("br"),r._v("  base_url/post/{tag} "),t("br"),t("br"),r._v(" PUT: 修改数据  base_url/put/{tag} "),t("br"),t("br"),r._v(" DELETE: 删除数据 "),t("br"),r._v(" base_url/delete/{tag}")]),r._v(" "),t("td",[r._v("例如安全/私密获取一个 id = 82001 的 Privacy："),t("br"),r._v(" "),t("a",{attrs:{href:"http://apijson.cn/api/?url=http%3A%2F%2Fapijson.cn%3A8080%2Fgets%2FPrivacy&type=JSON&json=%7B%22id%22%3A82001%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v("base_url/gets/Privacy/ "),t("br"),r._v(' {"id":82001}'),t("OutboundLink")],1),r._v(" "),t("br"),r._v(" 相当于 "),t("br"),r._v(" "),t("a",{attrs:{href:"http://apijson.cn/api/?url=http%3A%2F%2Fapijson.cn%3A8080%2Fgets&type=JSON&json=%7B%22tag%22%3A%22Privacy%22,%22Privacy%22%3A%7B%22id%22%3A82001%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v("base_url/gets/ "),t("br"),r._v('{"tag":"Privacy", "Privacy":{"id":82001}}'),t("OutboundLink")],1),r._v(" "),t("br"),r._v(" "),t("br"),r._v(" 例如批量修改 id = 114, 124 的 Comment 的 content："),t("br"),t("a",{attrs:{href:"http://apijson.cn/api?url=http%3A%2F%2Fapijson.cn%3A8080%2Fput%2FComment%5B%5D&type=JSON&json=%7B%22id%7B%7D%22%3A%5B114,124%5D,%22content%22%3A%22test%20multi%20put%22%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v("base_url/put/Comemnt[]/ "),t("br"),r._v(" {"),t("br"),r._v('    "id{}":[114,124],'),t("br"),r._v('    "content":"test multi put"'),t("br"),r._v("}"),t("OutboundLink")],1),r._v(" "),t("br"),r._v(" 相当于 "),t("br"),r._v(" "),t("a",{attrs:{href:"http://apijson.cn/api?url=http%3A%2F%2Fapijson.cn%3A8080%2Fput&type=JSON&json=%7B%22tag%22%3A%22Comment%5B%5D%22,%22Comment%22%3A%7B%22id%7B%7D%22%3A%5B114,124%5D,%22content%22%3A%22test%20multi%20put%22%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v("base_url/put/ "),t("br"),r._v(" {"),t("br"),r._v('    "tag":"Comment[]", '),t("br"),r._v('    "Comment":{'),t("br"),r._v('      "id{}":[114,124],'),t("br"),r._v('      "content":"test multi put"'),t("br"),r._v("    }"),t("br"),r._v("}"),t("OutboundLink")],1)]),r._v(" "),t("td",[r._v("同以上对应的方法")])])])]),r._v(" "),t("p",[r._v("1.TableName指要查询的数据库表Table的名称字符串。第一个字符为大写字母，剩下的字符要符合英语字母、数字、下划线中的任何一种。对应的值的类型为JSONObject，结构是 {...}，里面放的是Table的字段(列名)。下同。"),t("br"),r._v('\n2."tag":tag 后面的tag是非GET、HEAD请求中匹配请求的JSON结构的标识，一般是要查询的Table的名称，由后端Request表中指定。下同。'),t("br"),r._v("\n3.GET、HEAD请求是开放请求，可任意组合任意嵌套。其它请求为受限制的安全/私密请求，对应的 方法（method）, 标识（tag）, 版本（version）, 结构（structure） 都必须和 后端Request表中所指定的 一一对应，否则请求将不被通过。version 不传、为 null 或 <=0 都会使用最高版本，传了其它有效值则会使用最接近它的最低版本。下同。"),t("br"),r._v("\n4.GETS与GET、HEADS与HEAD分别为同一类型的操作方法，请求稍有不同但返回结果相同。下同。"),t("br"),r._v("\n5.在HTTP通信中，自动化接口(get,gets,head,heads,post,put,delete) 全用HTTP POST请求。下同。"),t("br"),r._v("\n6.所有JSONObject都视为容器(或者文件夹)，结构为 {...} ，里面可以放普通对象或子容器。下同。"),t("br"),r._v("\n7.每个对象都有一个唯一的路径(或者叫地址)，假设对象名为refKey，则用 key0/key1/.../refKey 表示。下同。")]),r._v(" "),t("br"),r._v(" "),t("h3",{attrs:{id:"_3-2-功能符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-功能符"}},[r._v("#")]),r._v(" 3.2 功能符")]),r._v(" "),t("table",[t("thead",[t("tr",[t("th",[r._v("功能")]),r._v(" "),t("th",[r._v("键值对格式")]),r._v(" "),t("th",[r._v("使用示例")])])]),r._v(" "),t("tbody",[t("tr",[t("td",[r._v("查询数组")]),r._v(" "),t("td",[r._v('"key[]":{}，后面是JSONObject，key可省略。当key和里面的Table名相同时，Table会被提取出来，即 {Table:{Content}} 会被转化为 {Content}')]),r._v(" "),t("td",[t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%5B%5D%22:%7B%22count%22:3,%22User%22:%7B%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('{"User[]":{"User":{}}}'),t("OutboundLink")],1),r._v('，查询一个User数组。这里key和Table名都是User，User会被提取出来，即 {"User":{"id", ...}} 会被转化为 {"id", ...}，如果要进一步提取User中的id，可以把User[]改为User-id[]')])]),r._v(" "),t("tr",[t("td",[r._v("匹配选项范围")]),r._v(" "),t("td",[r._v('"key{}":[]，后面是JSONArray，作为key可取的值的选项')]),r._v(" "),t("td",[t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%5B%5D%22:%7B%22count%22:3,%22User%22:%7B%22id%7B%7D%22:%5B38710,82001,70793%5D%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"id{}":[38710,82001,70793]'),t("OutboundLink")],1),r._v("，对应SQL是"),t("code",[r._v("id IN(38710,82001,70793)")]),r._v("，查询id符合38710,82001,70793中任意一个的一个User数组")])]),r._v(" "),t("tr",[t("td",[r._v("匹配条件范围")]),r._v(" "),t("td",[r._v('"key{}":"条件0,条件1..."，条件为SQL表达式字符串，可进行数字比较运算等')]),r._v(" "),t("td",[t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%5B%5D%22:%7B%22count%22:3,%22User%22:%7B%22id%7B%7D%22:%22%3C=80000,%3E90000%22%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"id{}":"<=80000,>90000"'),t("OutboundLink")],1),r._v("，对应SQL是"),t("code",[r._v("id<=80000 OR id>90000")]),r._v("，查询id符合id<=80000 | id>90000的一个User数组")])]),r._v(" "),t("tr",[t("td",[r._v("包含选项范围")]),r._v(" "),t("td",[r._v('"key<>":Object  =>  "key<>":[Object]，key对应值的类型必须为JSONArray，Object类型不能为JSON')]),r._v(" "),t("td",[t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%5B%5D%22:%7B%22count%22:3,%22User%22:%7B%22contactIdList%3C%3E%22:38710%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"contactIdList<>":38710'),t("OutboundLink")],1),r._v("，对应SQL是"),t("code",[r._v("json_contains(contactIdList,38710)")]),r._v("，查询contactIdList包含38710的一个User数组")])]),r._v(" "),t("tr",[t("td",[r._v("判断是否存在")]),r._v(" "),t("td",[r._v('"key}{@":{'),t("br"),r._v('    "from":"Table",'),t("br"),r._v('    "Table":{ ... }'),t("br"),r._v("}"),t("br"),r._v("其中："),t("br"),r._v("}{ 表示 EXISTS；"),t("br"),r._v(" key 用来标识是哪个判断；"),t("br"),r._v(" @ 后面是 子查询 对象，具体见下方 子查询 的说明。")]),r._v(" "),t("td",[t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%22:%7B%22id%7D%7B@%22:%7B%22from%22:%22Comment%22,%22Comment%22:%7B%22momentId%22:15%7D%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"id}{@":{'),t("br"),r._v('    "from":"Comment",'),t("br"),r._v('    "Comment":{'),t("br"),r._v('        "momentId":15 '),t("br"),r._v("    }"),t("br"),r._v("}"),t("OutboundLink")],1),t("br"),r._v(" WHERE EXISTS(SELECT * FROM Comment WHERE momentId=15)")])]),r._v(" "),t("tr",[t("td",[r._v("远程调用函数")]),r._v(" "),t("td",[r._v('"key()":"函数表达式"，函数表达式为 function(key0,key1...)，会调用后端对应的函数 function(JSONObject request, String key0, String key1...)，实现 参数校验、数值计算、数据同步、消息推送、字段拼接、结构变换 等特定的业务逻辑处理，'),t("br"),r._v("可使用 - 和 + 表示优先级，解析 key-() > 解析当前对象 > 解析 key() > 解析子对象 > 解析 key+()")]),r._v(" "),t("td",[t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22Moment%22:%7B%22id%22:301,%22isPraised()%22:%22isContain(praiseUserIdList,userId)%22%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"isPraised()":"isContain(praiseUserIdList,userId)"'),t("OutboundLink")],1),r._v('，会调用远程函数 boolean isContain(JSONObject request, String array, String value) ，然后变为 "isPraised":true 这种（假设点赞用户id列表包含了userId，即这个User点了赞）')])]),r._v(" "),t("tr",[t("td",[r._v("存储过程")]),r._v(" "),t("td",[r._v('"@key()":"SQL函数表达式"，函数表达式为 '),t("br"),r._v("  function(key0,key1...) "),t("br"),r._v(" 会调用后端数据库对应的存储过程 SQL函数 "),t("br"),r._v(" function(String key0, String key1...) "),t("br"),r._v(" 除了参数会提前赋值，其它和 远程函数 一致")]),r._v(" "),t("td",[t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%22:%7B%22@limit%22:10,%22@offset%22:0,%22@procedure()%22:%22getCommentByUserId(id,@limit,@offset)%22%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"@limit":10, '),t("br"),r._v(' "@offset":0, '),t("br"),r._v(' "@procedure()":"getCommentByUserId(id,@limit,@offset)"'),t("OutboundLink")],1),r._v(" "),t("br"),r._v(" 会转为 "),t("br"),r._v(" "),t("code",[r._v("getCommentByUserId(38710,10,0)")]),r._v(" "),t("br"),r._v(" 来调用存储过程 SQL 函数 "),t("br"),r._v(" "),t("code",[r._v("getCommentByUserId(IN id bigint, IN limit int, IN offset int)")]),r._v(" "),t("br"),r._v(" 然后变为 "),t("br"),r._v('"procedure":{'),t("br"),r._v('    "count":-1, '),t("br"),r._v('    "update":false, '),t("br"),r._v('    "list":[] '),t("br"),r._v(" } "),t("br"),r._v(" 其中 count 是指写操作影响记录行数，-1 表示不是写操作；update 是指是否为写操作（增删改）；list 为返回结果集")])]),r._v(" "),t("tr",[t("td",[r._v("引用赋值")]),r._v(" "),t("td",[r._v('"key@":"key0/key1/.../refKey"，引用路径为用/分隔的字符串。以/开头的是缺省引用路径，从声明key所处容器的父容器路径开始；其它是完整引用路径，从最外层开始。'),t("br"),r._v(' 被引用的refKey必须在声明key的上面。如果对refKey的容器指定了返回字段，则被引用的refKey必须写在@column对应的值内，例如 "@column":"refKey,key1,..."')]),r._v(" "),t("td",[t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22Moment%22:%7B%22userId%22:38710%7D,%22User%22:%7B%22id@%22:%22%252FMoment%252FuserId%22%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"Moment":{'),t("br"),r._v('    "userId":38710'),t("br"),r._v("},"),t("br"),r._v('"User":{'),t("br"),r._v('    "id@":"/Moment/userId"'),t("br"),r._v("}"),t("OutboundLink")],1),t("br"),r._v(" User内的id引用了与User同级的Moment内的userId，"),t("br"),r._v("即User.id = Moment.userId，请求完成后"),t("br"),r._v(' "id@":"/Moment/userId" 会变成 "id":38710')])]),r._v(" "),t("tr",[t("td",[r._v("子查询")]),r._v(" "),t("td",[r._v('"key@":{'),t("br"),r._v('    "range":"ALL", '),t("br"),r._v('    "from":"Table",'),t("br"),r._v('    "Table":{ ... }'),t("br"),r._v("}"),t("br"),r._v("其中："),t("br"),r._v("range 可为 ALL,ANY；"),t("br"),r._v("from 为目标表 Table 的名称；"),t("br"),r._v("@ 后面的对象类似数组对象，可使用 count 和 join 等功能。")]),r._v(" "),t("td",[t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%22:%7B%22id@%22:%7B%22from%22:%22Comment%22,%22Comment%22:%7B%22@column%22:%22min(userId)%22%7D%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"id@":{'),t("br"),r._v('    "from":"Comment",'),t("br"),r._v('    "Comment":{'),t("br"),r._v('        "@column":"min(userId)" '),t("br"),r._v("    }"),t("br"),r._v("}"),t("OutboundLink")],1),t("br"),r._v(" WHERE id=(SELECT min(userId) FROM Comment)")])]),r._v(" "),t("tr",[t("td",[r._v("模糊搜索")]),r._v(" "),t("td",[r._v('"key$":"SQL搜索表达式"  =>  "key$":["SQL搜索表达式"]，任意SQL搜索表达式字符串，如 %key%(包含key), key%(以key开始), %k%e%y%(包含字母k,e,y) 等，%表示任意字符')]),r._v(" "),t("td",[t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%5B%5D%22:%7B%22count%22:3,%22User%22:%7B%22name$%22:%22%2525m%2525%22%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"name$":"%m%"'),t("OutboundLink")],1),r._v("，对应SQL是"),t("code",[r._v("name LIKE '%m%'")]),r._v('，查询name包含"m"的一个User数组')])]),r._v(" "),t("tr",[t("td",[r._v("正则匹配")]),r._v(" "),t("td",[r._v('"key~":"正则表达式"  =>  "key~":["正则表达式"]，任意正则表达式字符串，如 ^[0-9]+$ ，*~ 忽略大小写，可用于高级搜索')]),r._v(" "),t("td",[t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%5B%5D%22:%7B%22count%22:3,%22User%22:%7B%22name~%22:%22%5E%5B0-9%5D%252B$%22%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"name~":"^[0-9]+$"'),t("OutboundLink")],1),r._v("，对应SQL是"),t("code",[r._v("name REGEXP '^[0-9]+$'")]),r._v("，查询name中字符全为数字的一个User数组")])]),r._v(" "),t("tr",[t("td",[r._v("连续范围")]),r._v(" "),t("td",[r._v('"key%":"start,end"  =>  "key%":["start,end"]，其中 start 和 end 都只能为 Boolean, Number, String 中的一种，如 "2017-01-01,2019-01-01" ，["1,90000", "82001,100000"] ，可用于连续范围内的筛选')]),r._v(" "),t("td",[t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%5B%5D%22:%7B%22count%22:3,%22User%22:%7B%22date%2525%22:%222017-10-01,2018-10-01%22%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"date%":"2017-10-01,2018-10-01"'),t("OutboundLink")],1),r._v("，对应SQL是"),t("code",[r._v("date BETWEEN '2017-10-01' AND '2018-10-01'")]),r._v("，查询在2017-10-01和2018-10-01期间注册的用户的一个User数组")])]),r._v(" "),t("tr",[t("td",[r._v("新建别名")]),r._v(" "),t("td",[r._v('"name:alias"，name映射为alias，用alias替代name。可用于 column,Table,SQL函数 等。只用于GET类型、HEAD类型的请求')]),r._v(" "),t("td",[t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22Comment%22:%7B%22@column%22:%22id,toId:parentId%22,%22id%22:51%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"@column":"toId:parentId"'),t("OutboundLink")],1),r._v("，对应SQL是"),t("code",[r._v("toId AS parentId")]),r._v("，将查询的字段toId变为parentId返回")])]),r._v(" "),t("tr",[t("td",[r._v("增加 或 扩展")]),r._v(" "),t("td",[r._v('"key+":Object，Object的类型由key指定，且类型为Number,String,JSONArray中的一种。如 82001,"apijson",["url0","url1"] 等。只用于PUT请求')]),r._v(" "),t("td",[r._v('"praiseUserIdList+":[82001]，对应SQL是'),t("code",[r._v("json_insert(praiseUserIdList,82001)")]),r._v("，添加一个点赞用户id，即这个用户点了赞")])]),r._v(" "),t("tr",[t("td",[r._v("减少 或 去除")]),r._v(" "),t("td",[r._v('"key-":Object，与"key+"相反')]),r._v(" "),t("td",[r._v('"balance-":100.00，对应SQL是'),t("code",[r._v("balance = balance - 100.00")]),r._v("，余额减少100.00，即花费了100元")])]),r._v(" "),t("tr",[t("td",[r._v("比较运算")]),r._v(" "),t("td",[r._v(">, <, >=, <= 比较运算符，用于 "),t("br"),r._v('① 提供 "id{}":"<=90000" 这种条件范围的简化写法 '),t("br"),t("br"),r._v("② 实现子查询相关比较运算"),t("br"),t("br"),r._v('不支持 "key=":Object 和 "key!=":Object 这两种写法，直接用更简单的 "key":Object 和 "key!":Object 替代。')]),r._v(" "),t("td",[r._v("① "),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22%5B%5D%22:%7B%22User%22:%7B%22id%3C=%22:90000%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"id<=":90000'),t("OutboundLink")],1),r._v("，对应SQL是"),t("code",[r._v("id<=90000")]),r._v("，查询符合id<=90000的一个User数组"),t("br"),t("br"),r._v(" ② "),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%22:%7B%22id%3E@%22:%7B%22from%22:%22Comment%22,%22Comment%22:%7B%22@column%22:%22min(userId)%22%7D%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"id>@":{'),t("br"),r._v('    "from":"Comment",'),t("br"),r._v('    "Comment":{'),t("br"),r._v('        "@column":"min(userId)" '),t("br"),r._v("    }"),t("br"),r._v("}"),t("OutboundLink")],1),t("br"),r._v(" WHERE id>(SELECT min(userId) FROM Comment)")])]),r._v(" "),t("tr",[t("td",[r._v("逻辑运算")]),r._v(" "),t("td",[r._v("&, |, ! 逻辑运算符，对应数据库 SQL 中的 AND, OR, NOT。 "),t("br"),r._v("横或纵与：同一键值对的值内条件默认 | 或连接，可以在 key 后加逻辑运算符来具体指定；不同键值对的条件默认 & 与连接，可以用下面说明的对象关键词 @combine 来具体指定。 "),t("br"),t("br"),r._v('① & 可用于"key&{}":"条件"等'),t("br"),t("br"),r._v('② | 可用于"key|{}":"条件", "key|{}":[]等，一般可省略'),t("br"),t("br"),r._v('③ ! 可单独使用，如"key!":Object，也可像&,|一样配合其他功能符使用 '),t("br"),r._v(' "key!":null 无效，null 值会导致整个键值对被忽略解析，可以用 "key{}":"!=null" 替代，'),t("br"),r._v('"key":null 同理，用 "key{}":"=null" 替代。')]),r._v(" "),t("td",[r._v("① "),t("a",{attrs:{href:"http://apijson.cn:8080/head/%7B%22User%22:%7B%22id&%7B%7D%22:%22%3E80000,%3C=90000%22%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"id&{}":">80000,<=90000"'),t("OutboundLink")],1),r._v("，对应SQL是"),t("code",[r._v("id>80000 AND id<=90000")]),r._v("，即id满足id>80000 & id<=90000"),t("br"),t("br"),r._v(" ② "),t("a",{attrs:{href:"http://apijson.cn:8080/head/%7B%22User%22:%7B%22id%7C%7B%7D%22:%22%3E90000,%3C=80000%22%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"id|{}":">90000,<=80000"'),t("OutboundLink")],1),r._v('，同"id{}":">90000,<=80000"，对应SQL是'),t("code",[r._v("id>80000 OR id<=90000")]),r._v("，即id满足id>90000 | id<=80000"),t("br"),t("br"),r._v(" ③ "),t("a",{attrs:{href:"http://apijson.cn:8080/head/%7B%22User%22:%7B%22id!%7B%7D%22:%5B82001,38710%5D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"id!{}":[82001,38710]'),t("OutboundLink")],1),r._v("，对应SQL是"),t("code",[r._v("id NOT IN(82001,38710)")]),r._v("，即id满足 ! (id=82001 | id=38710)，可过滤黑名单的消息")])]),r._v(" "),t("tr",[t("td",[r._v("数组关键词，可自定义")]),r._v(" "),t("td",[r._v('"key":Object，key为 "[]":{} 中{}内的关键词，Object的类型由key指定'),t("br"),t("br"),r._v('① "count":Integer，查询数量，0 表示最大值，默认最大值为100 '),t("br"),t("br"),r._v('② "page":Integer，查询页码，从0开始，默认最大值为100，一般和count一起用'),t("br"),t("br"),r._v('③ "query":Integer，查询内容'),t("br"),r._v("0-对象，1-总数和分页详情，2-数据、总数和分页详情"),t("br"),r._v("总数关键词为 total，分页详情关键词为 info，"),t("br"),r._v(" 它们都和 query 同级，通过引用赋值得到，例如  "),t("br"),r._v('"total@":"/[]/total", "info@":"/[]/info" '),t("br"),r._v("这里query及total仅为GET类型的请求提供方便，"),t("br"),r._v(" 一般可直接用HEAD类型的请求获取总数"),t("br"),t("br"),r._v('④ "join":"&/Table0/key0@,</Table1/key1@"'),t("br"),r._v("多表连接方式："),t("br"),r._v(' "<" - LEFT JOIN '),t("br"),r._v(' ">" - RIGHT JOIN '),t("br"),r._v(' "&" - INNER JOIN '),t("br"),r._v(' "|" - FULL JOIN '),t("br"),r._v('  "!" - OUTER JOIN '),t("br"),r._v(' "@" - APP JOIN '),t("br"),r._v("其中 @ APP JOIN 为应用层连表，会从已查出的主表里取得所有副表 key@ 关联的主表内的 refKey 作为一个数组 refKeys: [value0, value1...]，然后把原来副表 count 次查询 key=$refKey 的 SQL 用 key IN($refKeys) 的方式合并为一条 SQL 来优化性能；"),t("br"),r._v(" 其它 JOIN 都是 SQL JOIN，具体功能和 MySQL,PostgreSQL 等数据库的 JOIN 一一对应 "),t("br"),t("code",[r._v('"join":"</ViceTable/key@",')]),t("br"),t("code",[r._v('"MainTable":{},')]),t("br"),t("code",[r._v('"ViceTable":{"key@":"/MainTable/refKey"}')]),t("br"),r._v("会对应生成 "),t("br"),t("code",[r._v("MainTable LEFT JOIN ViceTable")]),r._v(" "),t("br"),t("code",[r._v("ON ViceTable.key=MainTable.refKey")]),r._v(" "),t("br"),t("br"),r._v('⑤ "otherKey":Object，自定义关键词，名称和以上系统关键词不一样，且原样返回上传的值')]),r._v(" "),t("td",[r._v("① 查询User数组，最多5个："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22%5B%5D%22:%7B%22count%22:5,%22User%22:%7B%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"count":5'),t("OutboundLink")],1),t("br"),r._v("对应SQL是"),t("code",[r._v("LIMIT 5")]),r._v(" "),t("br"),t("br"),r._v(" ② 查询第3页的User数组，每页5个："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22%5B%5D%22:%7B%22count%22:5,%22page%22:3,%22User%22:%7B%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"count":5,'),t("br"),r._v('"page":3'),t("OutboundLink")],1),t("br"),r._v("对应SQL是"),t("code",[r._v("LIMIT 5 OFFSET 15")]),r._v(" "),t("br"),t("br"),r._v(" ③ 查询User数组和对应的User总数："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22%5B%5D%22:%7B%22query%22:2,%22count%22:5,%22User%22:%7B%7D%7D,%22total@%22:%22%252F%5B%5D%252Ftotal%22,%22info@%22:%22%252F%5B%5D%252Finfo%22%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"[]":{'),t("br"),r._v('    "query":2,'),t("br"),r._v('    "User":{}'),t("br"),r._v("},"),t("br"),r._v('"total@":"/[]/total",'),t("br"),r._v('"info@":"/[]/info"'),t("OutboundLink")],1),t("br"),r._v(" 返回的数据中，总数及分页详情结构为： "),t("br"),r._v('  "total":139,  //总数 '),t("br"),r._v(' "info":{  //分页详情 '),t("br"),r._v('    "total":139,  //总数 '),t("br"),r._v('    "count":5,  //每页数量 '),t("br"),r._v('    "page":0,  //当前页码 '),t("br"),r._v('    "max":27,  //最大页码 '),t("br"),r._v('    "more":true,  //是否还有更多 '),t("br"),r._v('    "first":true,  //是否为首页 '),t("br"),r._v('    "last":false  //是否为尾页 '),t("br"),r._v("} "),t("br"),t("br"),r._v(" ④ Moment INNER JOIN User LEFT JOIN Comment："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22%5B%5D%22:%7B%22count%22:5,%22join%22:%22&%252FUser%252Fid@,%3C%252FComment%252FmomentId@%22,%22Moment%22:%7B%22@column%22:%22id,userId,content%22,%22@group%22:%22id%22%7D,%22User%22:%7B%22name~%22:%22t%22,%22id@%22:%22%252FMoment%252FuserId%22,%22@column%22:%22id,name,head%22%7D,%22Comment%22:%7B%22momentId@%22:%22%252FMoment%252Fid%22,%22@column%22:%22id,momentId,content%22%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"[]":{'),t("br"),r._v('    "join":"&/User/id@,</Comment/momentId@",'),t("br"),r._v('    "Moment":{'),t("br"),r._v('     "@group":"id"  //主副表不是一对一，要去除重复数据'),t("br"),r._v("   },"),t("br"),r._v('    "User":{'),t("br"),r._v('      "name~":"t",'),t("br"),r._v('      "id@":"/Moment/userId"'),t("br"),r._v("    },"),t("br"),r._v('    "Comment":{'),t("br"),r._v('      "momentId@":"/Moment/id"'),t("br"),r._v("    }"),t("br"),r._v("}"),t("OutboundLink")],1),t("br"),t("br"),r._v(" ⑤ 每一层都加当前用户名："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%22:%7B%7D,%22%5B%5D%22:%7B%22name@%22:%22User%252Fname%22,%22Moment%22:%7B%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"User":{},'),t("br"),r._v('"[]":{'),t("br"),r._v('    "name@":"User/name", //自定义关键词'),t("br"),r._v('    "Moment":{}'),t("br"),r._v("}"),t("OutboundLink")],1)])]),r._v(" "),t("tr",[t("td",[r._v("对象关键词，可自定义")]),r._v(" "),t("td",[r._v('"@key":Object，@key为 Table:{} 中{}内的关键词，Object的类型由@key指定'),t("br"),t("br"),r._v('① "@combine":"&key0,&key1,|key2,key3,'),t("br"),r._v('!key4,!key5,&key6,key7..."，条件组合方式，| 可省略。会自动把同类的合并，外层按照 & | ! 顺序，内层的按传参顺序组合成'),t("br"),r._v(" (key0 & key1 & key6 & 其它key) & (key2 | key3 | key7) & !(key4 | key5) "),t("br"),r._v('这种连接方式，其中 "其它key" 是指与 @combine 在同一对象，且未被它声明的条件 key，默认都是 & 连接 '),t("br"),t("br"),r._v('② "@column":"column;function(arg)..."，返回字段'),t("br"),t("br"),r._v('③ "@order":"column0+,column1-..."，排序方式'),t("br"),t("br"),r._v('④ "@group":"column0,column1..."，分组方式。如果@column里声明了Table的id，则id也必须在@group中声明；其它情况下必须满足至少一个条件:'),t("br"),r._v("1.分组的key在@column里声明"),t("br"),r._v("2.Table主键在@group中声明 "),t("br"),t("br"),r._v('⑤ "@having":"function0(...)?value0;function1(...)?value1;function2(...)?value2..."，SQL函数条件，一般和@group一起用，函数一般在@column里声明'),t("br"),t("br"),r._v('⑥ "@schema":"sys"，集合空间(数据库名/模式)，非默认的值可通过它来指定，可以在最外层作为全局默认配置'),t("br"),t("br"),r._v('⑦ "@database":"POSTGRESQL"，数据库类型，非默认的值可通过它来指定，可以在最外层作为全局默认配置'),t("br"),t("br"),r._v('⑧ "@datasource":"DRUID"，跨数据源，非默认的值可通过它来指定，可以在最外层作为全局默认配置'),t("br"),t("br"),r._v('⑨ "@json":"key0,key1..."，转为 JSON 格式返回，符合 JSONObject 则转为 {...}，符合 JSONArray 则转为 [...] '),t("br"),t("br"),r._v('⑩ "@role":"OWNER"，来访角色，包括'),t("br"),r._v("UNKNOWN,LOGIN,CONTACT,CIRCLE,OWNER,ADMIN，"),t("br"),r._v("可以在最外层作为全局默认配置，"),t("br"),r._v("可自定义其它角色并重写 Verifier.verify 等相关方法来自定义校验 "),t("br"),t("br"),r._v('⑪ "@explain":true，性能分析，可以在最外层作为全局默认配置 '),t("br"),t("br"),r._v('⑫ "@raw":"key0,key1..."，其中 key0, key1 都对应有键值对'),t("br"),r._v(' "key0":"SQL片段或SQL片段的别名", '),t("br"),r._v(' "key1":"SQL片段或SQL片段的别名" '),t("br"),r._v(" 自定义原始SQL片段，可扩展嵌套SQL函数等复杂语句，必须是后端已配置的，只有其它功能符都做不到才考虑，谨慎使用，注意防SQL注入"),t("br"),t("br"),r._v('⑬ "@otherKey":Object，自定义关键词，名称和以上系统关键词不一样，且原样返回上传的值')]),r._v(" "),t("td",[r._v("① 搜索name或tag任何一个字段包含字符a的User列表："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%5B%5D%22:%7B%22count%22:10,%22User%22:%7B%22@column%22:%22id,name,tag%22,%22name~%22:%22a%22,%22tag~%22:%22a%22,%22@combine%22:%22name~,tag~%22%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"name~":"a",'),t("br"),r._v('"tag~":"a",'),t("br"),r._v('"@combine":"name~,tag~"'),t("OutboundLink")],1),t("br"),r._v("对应SQL是"),t("code",[r._v("name REGEXP 'a' OR tag REGEXP 'a'")]),r._v(" "),t("br"),t("br"),r._v(" ② 只查询id,sex,name这几列并且请求结果也按照这个顺序："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%22:%7B%22@column%22:%22id,sex,name%22,%22id%22:38710%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"@column":"id,sex,name"'),t("OutboundLink")],1),t("br"),r._v("对应SQL是"),t("code",[r._v("SELECT id,sex,name")]),r._v(" "),t("br"),t("br"),r._v(" ③ 查询按 name降序、id默认顺序 排序的User数组："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22%5B%5D%22:%7B%22count%22:10,%22User%22:%7B%22@column%22:%22name,id%22,%22@order%22:%22name-,id%22%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"@order":"name-,id"'),t("OutboundLink")],1),t("br"),r._v("对应SQL是"),t("code",[r._v("ORDER BY name DESC,id")]),r._v(" "),t("br"),t("br"),r._v(" ④ 查询按userId分组的Moment数组："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22%5B%5D%22:%7B%22count%22:10,%22Moment%22:%7B%22@column%22:%22userId,id%22,%22@group%22:%22userId,id%22%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"@group":"userId,id"'),t("OutboundLink")],1),t("br"),r._v("对应SQL是"),t("code",[r._v("GROUP BY userId,id")]),r._v(" "),t("br"),t("br"),r._v(" ⑤ 查询 按userId分组、id最大值>=100 的Moment数组："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22%5B%5D%22:%7B%22count%22:10,%22Moment%22:%7B%22@column%22:%22userId%253Bmax(id)%22,%22@group%22:%22userId%22,%22@having%22:%22max(id)%3E=100%22%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"@column":"userId;max(id)",'),t("br"),r._v('"@group":"userId",'),t("br"),r._v('"@having":"max(id)>=100"'),t("OutboundLink")],1),t("br"),r._v("对应SQL是"),t("code",[r._v("SELECT userId,max(id) ... GROUP BY userId HAVING max(id)>=100")]),r._v(" "),t("br"),r._v("还可以指定函数返回名："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22%5B%5D%22:%7B%22count%22:10,%22Moment%22:%7B%22@column%22:%22userId%253Bmax(id):maxId%22,%22@group%22:%22userId%22,%22@having%22:%22maxId%3E=100%22%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"@column":"userId;max(id):maxId",'),t("br"),r._v('"@group":"userId",'),t("br"),r._v('"@having":"maxId>=100"'),t("OutboundLink")],1),t("br"),r._v("对应SQL是"),t("code",[r._v("SELECT userId,max(id) AS maxId ... GROUP BY userId HAVING maxId>=100")]),r._v(" "),t("br"),t("br"),r._v(" ⑥ 查询 sys 内的 User 表："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%22:%7B%22@schema%22:%22sys%22%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"@schema":"sys"'),t("OutboundLink")],1),t("br"),r._v("对应SQL是"),t("code",[r._v("FROM sys.User")]),r._v(" "),t("br"),t("br"),r._v(" ⑦ 查询 PostgreSQL 数据库的 User 表："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%22:%7B%22@database%22:%22POSTGRESQL%22,%22@explain%22:true%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"@database":"POSTGRESQL"'),t("OutboundLink")],1),t("br"),t("br"),r._v(" ⑧ 使用 Druid 连接池查询 User 表："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%22:%7B%22@datasource%22:%22DRUID%22%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"@datasource":"DRUID"'),t("OutboundLink")],1),t("br"),t("br"),r._v(" ⑨ 将 VARCHAR 字符串字段 get 转为 JSONArray 返回："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22Access%22:%7B%22@json%22:%22get%22%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"@json":"get"'),t("OutboundLink")],1),t("br"),t("br"),r._v(" ⑩ 查询当前用户的动态："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22%5B%5D%22:%7B%22Moment%22:%7B%22@role%22:%22OWNER%22%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"@role":"OWNER"'),t("OutboundLink")],1),t("br"),t("br"),r._v(" ⑪ 开启性能分析："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22%5B%5D%22:%7B%22Moment%22:%7B%22@explain%22:true%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"@explain":true'),t("OutboundLink")],1),t("br"),r._v("对应SQL是"),t("code",[r._v("EXPLAIN")]),r._v(" "),t("br"),t("br"),r._v(" ⑫ 统计最近一周偶数userId的数量"),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22%5B%5D%22:%7B%22Moment%22:%7B%22@column%22:%22date%3bleft(date,10):day%3bsum(if(userId%252=0,1,0))%22,%22@group%22:%22day%22,%22@having%22:%22to_days(now())-to_days(%60date%60)%3C=7%22,%22@raw%22:%22@column,@having%22%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"@column":"date;left(date,10):day;sum(if(userId%2=0,1,0))",'),t("br"),r._v('"@group":"day",'),t("br"),r._v('"@having":"to_days(now())-to_days(`date`)<=7",'),t("br"),r._v('"@raw":"@column,@having"'),t("OutboundLink")],1),t("br"),r._v("对应SQL是"),t("code",[r._v("SELECT date, left(date,10) AS day, sum(if(userId%2=0,1,0)) ... GROUP BY day HAVING to_days(now())-to_days(`date`)<=7")]),r._v(" "),t("br"),t("br"),r._v(" ⑬ 从pictureList获取第0张图片："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22User%22:%7B%22id%22:38710,%22@position%22:0,%22firstPicture()%22:%22getFromArray(pictureList,@position)%22%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('"@position":0, //自定义关键词'),t("br"),r._v('"firstPicture()":"getFromArray(pictureList,@position)"'),t("OutboundLink")],1)])]),r._v(" "),t("tr",[t("td",[r._v("全局关键词")]),r._v(" "),t("td",[r._v("为最外层对象 {} 内的关键词。其中 @database，@schema, @datasource, @role, @explain 基本同对象关键词，见上方说明，区别是全局关键词会每个表对象中没有时自动放入，作为默认值。 "),t("br"),t("br"),r._v('① "tag":String，后面的 tag 是非 GET、HEAD 请求中匹配请求的 JSON 结构的标识，一般是要查询的 Table 的名称或该名称对应的数组 Table[] 或 Table:[]，由后端 Request 表中指定。 '),t("br"),t("br"),r._v('② "version":Integer，接口版本，version 不传、为 null 或 <=0 都会使用最高版本，传了其它有效值则会使用最接近它的最低版本，由后端 Request 表中指定。'),t("br"),t("br"),r._v('③ "format":Boolean，格式化返回 Response JSON 的 key，一般是将 TableName 转为 tableName, TableName[] 转为 tableNameList, Table:alias 转为 alias, TableName-key[] 转为 tableNameKeyList 等小驼峰格式。')]),r._v(" "),t("td",[r._v("①  查隐私信息："),t("br"),t("a",{attrs:{href:"http://apijson.cn/api?url=http%3A%2F%2Fapijson.cn%3A8080%2Fgets&type=JSON&json=%7B%22tag%22:%22Privacy%22,%22Privacy%22:%7B%22id%22:82001%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('{"tag":"Privacy","Privacy":{"id":82001}}'),t("OutboundLink")],1),t("br"),t("br"),r._v(" ② 使用第 1 版接口查隐私信息："),t("br"),t("a",{attrs:{href:"http://apijson.cn/api?url=http%3A%2F%2Fapijson.cn%3A8080%2Fgets&type=JSON&json=%7B%22version%22:1,%22tag%22:%22Privacy%22,%22Privacy%22:%7B%22id%22:82001%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v('{"version":1,"tag":"Privacy","Privacy":{"id":82001}}'),t("OutboundLink")],1),r._v(" "),t("br"),t("br"),r._v(" ③ 格式化朋友圈接口返回 JSON 中的 key："),t("br"),t("a",{attrs:{href:"http://apijson.cn:8080/get/%7B%22format%22:true,%22%5B%5D%22:%7B%22page%22:0,%22count%22:3,%22Moment%22:%7B%7D,%22User%22:%7B%22id@%22:%22%252FMoment%252FuserId%22%7D,%22Comment%5B%5D%22:%7B%22count%22:3,%22Comment%22:%7B%22momentId@%22:%22%5B%5D%252FMoment%252Fid%22%7D%7D%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[r._v("{"),t("br"),r._v('    "format":true, '),t("br"),r._v('    "[]":{'),t("br"),r._v('      "page":0, '),t("br"),r._v('      "count":3, '),t("br"),r._v('      "Moment":{}, '),t("br"),r._v('      "User":{'),t("br"),r._v('        "id@":"/Moment/userId"'),t("br"),r._v("      },"),t("br"),r._v('      "Comment[]":{'),t("br"),r._v('        "count":3,'),t("br"),r._v('        "Comment":{'),t("br"),r._v('          "momentId@":"[]/Moment/id"'),t("br"),r._v("        }"),t("br"),r._v("      }"),t("br"),r._v("    }"),t("br"),r._v("}"),t("OutboundLink")],1)])])])]),r._v(" "),t("br")])}),[],!1,null,null,null);e.default=_.exports}}]);