# APIJSON测试 get 2020-12-12 14:34
主页: https://github.com/Tencent/APIJSON


URL: http://apijson.cn:8080/get


Header:



Request:
{
    "User": {
        "id": 82001
    },
    "[]": {
        "Comment": {
            "userId@": "User/id"
        }
    }
}
                                                                                                                                                                                                              



Response:
{
    "User": {
        "id": 82001,
        "sex": 0,
        "name": "测试账号",
        "tag": "Dev",
        "head": "https://avatars2.githubusercontent.com/u/19383298?s=460&u=b0af1193a77e285255faaf9b9fe1d9c399756d73&v=4",
        "contactIdList": [
            93793,
            82034,
            82005,
            38710,
            82009,
            82030,
            82035,
            82042
        ],
        "pictureList": [
            "http://common.cnblogs.com/images/icon_weibo_24.png"
        ],
        "date": "2017-02-01 19:21:50.0"
    },
    "[]": [
        {
            "Comment": {
                "id": 22,
                "toId": 221,
                "userId": 82001,
                "momentId": 470,
                "date": "2017-02-01 19:20:50.0",
                "content": "测试修改评论"
            }
        },
        {
            "Comment": {
                "id": 114,
                "toId": 0,
                "userId": 82001,
                "momentId": 371,
                "date": "2017-03-02 13:56:06.0",
                "content": "This is a Content...-114"
            }
        },
        {
            "Comment": {
                "id": 124,
                "toId": 0,
                "userId": 82001,
                "momentId": 301,
                "date": "2017-03-02 13:56:06.0",
                "content": "This is a Content...-114"
            }
        },
        {
            "Comment": {
                "id": 160,
                "toId": 0,
                "userId": 82001,
                "momentId": 235,
                "date": "2017-03-02 13:56:06.0",
                "content": "This is a Content...-160"
            }
        },
        {
            "Comment": {
                "id": 163,
                "toId": 0,
                "userId": 82001,
                "momentId": 235,
                "date": "2017-03-02 13:56:06.0",
                "content": "This is a Content...-163"
            }
        },
        {
            "Comment": {
                "id": 167,
                "toId": 0,
                "userId": 82001,
                "momentId": 58,
                "date": "2017-03-25 19:48:41.0",
                "content": "Nice!"
            }
        },
        {
            "Comment": {
                "id": 168,
                "toId": 1490442545077,
                "userId": 82001,
                "momentId": 235,
                "date": "2017-03-25 19:49:14.0",
                "content": "???"
            }
        },
        {
            "Comment": {
                "id": 172,
                "toId": 162,
                "userId": 82001,
                "momentId": 12,
                "date": "2017-03-25 20:22:58.0",
                "content": "OK"
            }
        },
        {
            "Comment": {
                "id": 182,
                "toId": 110,
                "userId": 82001,
                "momentId": 371,
                "date": "2017-03-26 14:12:52.0",
                "content": "hahaha"
            }
        },
        {
            "Comment": {
                "id": 188,
                "toId": 97,
                "userId": 82001,
                "momentId": 58,
                "date": "2017-03-26 15:21:32.0",
                "content": "1646"
            }
        }
    ],
    "ok": true,
    "code": 200,
    "msg": "success",
    "sql:generate|cache|execute|maxExecute": "11|9|2|200",
    "depth:count|max": "3|5",
    "time:start|duration|end": "1607754870083|5|1607754870088"
}


## 解析 Response 的代码(Python):

response: dict = json.loads(resultJson) 


# User <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
user: dict = response['User']
# self.assertIsNotNone(user)
if user == None:
    user = {}

id: int = user['id']
print('user.id = ' + str(id))
self.assertEqual(id, 82001)

sex: int = user['sex']
print('user.sex = ' + str(sex))
self.assertEqual(sex, 0)

name: str = user['name']
print('user.name = ' + str(name))
self.assertEqual(name, "测试账号")

tag: str = user['tag']
print('user.tag = ' + str(tag))
self.assertEqual(tag, "Dev")

head: str = user['head']
print('user.head = ' + str(head))
self.assertEqual(head, "https://avatars2.githubusercontent.com/u/19383298?s=460&u=b0af1193a77e285255faaf9b9fe1d9c399756d73&v=4")


# contactIdList <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
contactIdList: list = user['contactIdList']
# self.assertIsNotNone(contactIdList)
if contactIdList == None:
    contactIdList = []


#TODO 把这段代码抽取一个函数，以免for循环嵌套时 i 冲突 或 id等其它字段冲突
contactIdListItem: int = None
for i in range(len(contactIdList)):
    contactIdListItem = contactIdList[i]
    if contactIdListItem == None:
        continue
    print('\ncontactIdListItem = contactIdList[' + str(i) + '] = \n' + str(contactIdListItem) + '\n\n')
    #TODO 你的代码

# contactIdList >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


# pictureList <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
pictureList: list = user['pictureList']
# self.assertIsNotNone(pictureList)
if pictureList == None:
    pictureList = []


#TODO 把这段代码抽取一个函数，以免for循环嵌套时 i 冲突 或 id等其它字段冲突
pictureListItem: str = None
for i in range(len(pictureList)):
    pictureListItem = pictureList[i]
    if pictureListItem == None:
        continue
    print('\npictureListItem = pictureList[' + str(i) + '] = \n' + str(pictureListItem) + '\n\n')
    #TODO 你的代码

# pictureList >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

date: str = user['date']
print('user.date = ' + str(date))
self.assertEqual(date, "2017-02-01 19:21:50.0")

# User >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


# [] <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
array: list = response['[]']
# self.assertIsNotNone(array)
if array == None:
    array = []


#TODO 把这段代码抽取一个函数，以免for循环嵌套时 i 冲突 或 id等其它字段冲突
arrayItem: dict = None
for i in range(len(array)):
    arrayItem = array[i]
    if arrayItem == None:
        continue
    print('\narrayItem = array[' + str(i) + '] = \n' + str(arrayItem) + '\n\n')
    #TODO 你的代码


    # Comment <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    comment: dict = arrayItem['Comment']
    # self.assertIsNotNone(comment)
    if comment == None:
        comment = {}

    id: int = comment['id']
    print('comment.id = ' + str(id))
    self.assertEqual(id, 22)

    toId: int = comment['toId']
    print('comment.toId = ' + str(toId))
    self.assertEqual(toId, 221)

    userId: int = comment['userId']
    print('comment.userId = ' + str(userId))
    self.assertEqual(userId, 82001)

    momentId: int = comment['momentId']
    print('comment.momentId = ' + str(momentId))
    self.assertEqual(momentId, 470)

    date: str = comment['date']
    print('comment.date = ' + str(date))
    self.assertEqual(date, "2017-02-01 19:20:50.0")

    content: str = comment['content']
    print('comment.content = ' + str(content))
    self.assertEqual(content, "测试修改评论")

    # Comment >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

# [] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

ok: bool = response['ok']
print('response.ok = ' + str(ok))
self.assertEqual(ok, True)

code: int = response['code']
print('response.code = ' + str(code))
self.assertEqual(code, 200)

msg: str = response['msg']
print('response.msg = ' + str(msg))
self.assertEqual(msg, "success")
